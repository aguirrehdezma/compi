package compi;


import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import miscelaneo.OperacionesExcel;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.RTextScrollPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author aguir
 */
public class Vta extends javax.swing.JFrame {

    RSyntaxTextArea textArea;
    
    AnalisisLexico analisisLexico;
    String MATRIZ_LEXICO_EXCEL_PATH = "src\\resources\\matriz_lexico.xlsx";
    String MATRIZ_SINTAXIS_EXCEL_PATH = "src\\resources\\matriz_sintaxis.xlsx";
    String MATRIZ_SHEET_NAME = "Hoja1";
    int[][] matrizLexico, matrizSintaxis;
    int[] cntDiagramas;
    
    /**
     * Creates new form Vta
     */
    public Vta() {
        this.setTitle("Compi");
        
        initComponents();
        
        textArea = new RSyntaxTextArea();
        textArea.setFont(new Font("Monospaced", Font.PLAIN, 14));
        RTextScrollPane sp = new RTextScrollPane(textArea);
        panTextArea.add(sp);
        
        int[] tokensColumnSizes = {100, 300, 100}, erroresColumnSizes = {50, 357, 200, 50, 50, 50};
        for (int i = 0; i < tokensColumnSizes.length; i++) tblTokens.getColumnModel().getColumn(i).setPreferredWidth(tokensColumnSizes[i]);
        for (int i = 0; i < erroresColumnSizes.length; i++) tblErrores.getColumnModel().getColumn(i).setPreferredWidth(erroresColumnSizes[i]);
        
        DefaultTableModel model = (DefaultTableModel) tblContadores.getModel();
        for (int columna = 0; columna < model.getColumnCount(); columna++) model.setValueAt(0, 0, columna);
        
        matrizLexico = OperacionesExcel.readExcel(MATRIZ_LEXICO_EXCEL_PATH, MATRIZ_SHEET_NAME, 71, 37);
        matrizSintaxis = OperacionesExcel.readExcel(MATRIZ_SINTAXIS_EXCEL_PATH, MATRIZ_SHEET_NAME, 89, 130);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panTextArea = new javax.swing.JPanel();
        btnAbrir = new javax.swing.JButton();
        btnCompilar = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        jspContadores = new javax.swing.JScrollPane();
        tblContadores = new javax.swing.JTable();
        jspTokens = new javax.swing.JScrollPane();
        tblTokens = new javax.swing.JTable();
        jspErrores = new javax.swing.JScrollPane();
        tblErrores = new javax.swing.JTable();
        lblGato = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panTextArea.setLayout(new java.awt.CardLayout());

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnCompilar.setText("Compilar");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });

        btnExcel.setText("Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        tblContadores.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblContadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Errores", "Identificadores", "Comentarios", "Reservadas", "C. Cadena", "C. Numérica", "C. Real", "C. Exponenciales", "C. Bool", "C. Null", "Postfix", "Log Bin", "Control", "Matemáticos", "Exponente", "Turno", "Relacionales", "Sin Igualdad", "Lógicos", "Ternario", "Asignación", "Agrupamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspContadores.setViewportView(tblContadores);

        tblTokens.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estado", "Lexema", "Línea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspTokens.setViewportView(tblTokens);

        tblErrores.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblErrores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Descripción", "Lexema", "Tipo", "Línea", "Col. Error"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspErrores.setViewportView(tblErrores);

        lblGato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cat.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspContadores)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspErrores)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jspTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(btnAbrir)
                .addGap(18, 18, 18)
                .addComponent(btnCompilar)
                .addGap(18, 18, 18)
                .addComponent(btnExcel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jspTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(lblGato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jspErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAbrir)
                    .addComponent(btnCompilar)
                    .addComponent(btnExcel))
                .addGap(12, 12, 12)
                .addComponent(jspContadores, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Abrir Archivo Prueba");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
        fileChooser.setFileFilter(filter);

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                String filePath = fileChooser.getSelectedFile().getAbsolutePath();
                String fileContent = readFile(filePath);
                textArea.setText(fileContent);
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al abrir archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed
        String text = textArea.getText() + "\n";
        cntDiagramas = new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0};
        analisisLexico = new AnalisisLexico(text, matrizLexico, matrizSintaxis, tblContadores, tblTokens, tblErrores, cntDiagramas);
        cleanUp();
        analisisLexico.analizarLexico();
    }//GEN-LAST:event_btnCompilarActionPerformed

    private void cleanUp () {
        DefaultTableModel model = (DefaultTableModel) tblContadores.getModel();
        for (int columna = 0; columna < model.getColumnCount(); columna++) model.setValueAt(0, 0, columna);
        
        DefaultTableModel tblTokensModel = (DefaultTableModel) tblTokens.getModel();
        while (tblTokensModel.getRowCount() > 0) tblTokensModel.removeRow(0);
        
        DefaultTableModel tblErroresModel = (DefaultTableModel) tblErrores.getModel();
        while (tblErroresModel.getRowCount() > 0) tblErroresModel.removeRow(0);
    }
    
    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Archivo Excel");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel files (*.xlsx)", "xlsx"));
        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            if (!filePath.toLowerCase().endsWith(".xlsx")) {
                filePath += ".xlsx";
            }
            OperacionesExcel.createExcel(filePath, tblContadores, tblTokens, tblErrores, cntDiagramas);
        }
    }//GEN-LAST:event_btnExcelActionPerformed

    private String readFile(String filePath) throws IOException {
        StringBuilder content = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) content.append(line).append('\n');
        }
        return content.toString();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Vta().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JButton btnExcel;
    private javax.swing.JScrollPane jspContadores;
    private javax.swing.JScrollPane jspErrores;
    private javax.swing.JScrollPane jspTokens;
    private javax.swing.JLabel lblGato;
    private javax.swing.JPanel panTextArea;
    private javax.swing.JTable tblContadores;
    private javax.swing.JTable tblErrores;
    private javax.swing.JTable tblTokens;
    // End of variables declaration//GEN-END:variables
}
